#!/bin/bash
set -e
set -o pipefail

echo Sourcing configuration from header files...
CONFIG=$(sed -r '{
        /^#define/!d
        /#define[ \t]*[^ \t]*$/d
        s/[^ \t]*[ \t]*([^ \t]*)[ \t]*(.*)/\1="\2"/
		s/""/"/g
        /(""|\([^\)]*\))/d
    }' <(cat include/*.h))

echo "$CONFIG";
eval "$CONFIG"

SCRATCH_PATH=$(mktemp -d -t bdict.XXXXXXXXXX)
RESOURCES_PATH=resources
SCRIPTS_PATH=scripts
SLOVNIK_PATH=$SCRATCH_PATH/slovnik
DB_PATH=$SCRATCH_PATH/$DB_FILE_NAME

function finish {
	echo Temporary files removed.
	rm -rf "$SCRATCH_PATH"
}

trap finish EXIT

echo Building db setup code...
make &

echo Unpacking Rechko...
(zcat $RESOURCES_PATH/db-rechko.sql.gz > $SCRATCH_PATH/db-rechko.sql) &

echo Unpacking RBE...
(zcat $RESOURCES_PATH/db-rbe.sql.gz > $SCRATCH_PATH/db-rbe.sql) &

wait

echo Decrypting and unpacking Slovnik...
openssl enc -aes-256-cbc -d -in $RESOURCES_PATH/slovnik.tar.gz.enc -pbkdf2 | tar -xz -C $SCRATCH_PATH

echo Cleaning RBE...
time parallel --bar -a $SCRATCH_PATH/db-rbe.sql --block 30M --pipe-part \
	"sed -n -E -f $SCRIPTS_PATH/20_*.sed |\
		sed -E -f $SCRIPTS_PATH/21_*.sed" \
			>$SCRATCH_PATH/db-rbe.csv
echo ""

# assembling slovnik into one csv file
rm -f $SLOVNIK_PATH/all.txt;
for f in $SLOVNIK_PATH/*.txt; do
	(cat "${f}"; printf "\n") >> $SCRATCH_PATH/$SLOVNIK_FILE_NAME
	rm -f $f
done

rm -rf $SLOVNIK_PATH

echo Importing slovnik wordforms...
time ./import_slovnik $SCRATCH_PATH
echo ""

echo Importing RBE lemmata into database...
sqlite3 $DB_PATH ".read scripts/30_create_rbe_lemma.sql"
time sqlite3 $DB_PATH ".mode csv" ".separator ^" ".import $SCRATCH_PATH/db-rbe.csv lemma"
echo ""

echo Creating lemma fulltext index
time sqlite3 $DB_PATH "CREATE VIRTUAL TABLE lemma_ft USING fts5(source_definition, content=lemma);" "INSERT INTO lemma_ft SELECT source_definition FROM lemma;"
echo ""

echo Creating wordform table...
time sqlite3 $DB_PATH ".read scripts/40_create_wordform.sql"
echo ""

echo Vacuum...
time sqlite3 $DB_PATH "VACUUM"
echo ""

echo Create stress table...
sqlite3 $DB_PATH ".read scripts/50_create_stress.sql"
echo ""

echo Converting Rechko MySQL dump to SQLite
time ./scripts/mysql2sqlite.awk $SCRATCH_PATH/db-rechko.sql > $SCRATCH_PATH/db-rechko.sqlite
echo ""

echo Importing Rechko...
time sqlite3 $DB_PATH ".read $SCRATCH_PATH/db-rechko.sqlite"
echo ""

echo Cleaning Rechko...
# useful tables from Rechko: derivative_form, word, word_type
time sqlite3 $DB_PATH "DROP TABLE abstract_word; DROP TABLE incorrect_form; DROP TABLE incorrect_form_revision; DROP TABLE revision; DROP TABLE sf_guard_group; DROP TABLE sf_guard_group_permission; DROP TABLE sf_guard_permission; DROP TABLE sf_guard_remember_key; DROP TABLE sf_guard_user; DROP TABLE sf_guard_user_group; DROP TABLE sf_guard_user_permission; DROP TABLE sf_guard_user_profile; DROP TABLE word_revision; DROP TABLE word_translation;"
echo ""

echo Persisting temp database...
time cp $DB_PATH dictionary.db
echo ""

echo Vacuum...
time sqlite3 $DB_PATH "VACUUM"
echo ""

echo Build finished. Success.

#echo Importing wordform stresses in stress table...
#python "scripts/wordform_stress_importer.py"
