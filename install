#!/bin/bash
set -e
set -o pipefail

SCRATCH_PATH=$(mktemp -d -t bdict.XXXXXXXXXX)
function finish {
	echo Temporary files removed.
	rm -rf "$SCRATCH_PATH"
}

trap finish EXIT

RESOURCES_PATH=resources
SCRIPTS_PATH=scripts
SLOVNIK_PATH=$SCRATCH_PATH/slovnik

echo Building db setup code...
make

echo Unpacking Rechko...
(zcat $RESOURCES_PATH/db-rechko.sql.gz > $SCRATCH_PATH/db-rechko.sql) &

echo Unpacking RBE...
(zcat $RESOURCES_PATH/db-rbe.sql.gz > $SCRATCH_PATH/db-rbe.sql) &

wait

echo Decrypting and unpacking Slovnik...
openssl enc -aes-256-cbc -d -in $RESOURCES_PATH/slovnik.tar.gz.enc -pbkdf2 | tar -xz -C $SCRATCH_PATH

echo Cleaning RBE...
time parallel --bar -a $SCRATCH_PATH/db-rbe.sql --block 30M --pipe-part \
	"sed -n -E -f $SCRIPTS_PATH/20_*.sed |\
		sed -E -f $SCRIPTS_PATH/21_*.sed" \
			>$SCRATCH_PATH/db-rbe.csv

# assembling slovnik.csv
rm -f $SLOVNIK_PATH/all.txt;
for f in $SLOVNIK_PATH/*.txt; do
	(cat "${f}"; printf "\n") >> $SCRATCH_PATH/slovnik.csv
	rm -f $f
done

rm -rf $SLOVNIK_PATH

echo Creating database...
./builddb $SCRATCH_PATH

echo Importing lemmata into database...
sqlite3 $SCRATCH_PATH/temp.db ".mode csv" ".separator ^" ".import $SCRATCH_PATH/db-rbe.csv lemma"

echo Creating wordform table...
sqlite3 $SCRATCH_PATH/temp.db ".read scripts/50_create_wordform.sql"

#echo Importing Rechko...
#sqlite3 $SCRATCH_PATH/temp.db ".read $SCRATCH_PATH/db-rechko.sql"
#
#echo Cleaning Rechko...
#sqlite3 $SCRATCH_PATH/temp.db "DROP TABLE IF EXISTS abstract_word, incorrect_form, incorrect_form_revision, revision, sf_guard_group, sf_guard_group_permission, sf_guard_permission, sf_guard_remember_key, sf_guard_user, sf_guard_user_group, sf_guard_user_permission, sf_guard_user_profile, word_revision, word_translation;"

echo Persisting temp database...
cp $SCRATCH_PATH/temp.db dictionary.db

echo Build finished. Success.
exit 1;

echo Importing wordform stresses in stress table...
python "scripts/wordform_stress_importer.py"

# usefule tables from Rechko: derivative_form, word, word_type
